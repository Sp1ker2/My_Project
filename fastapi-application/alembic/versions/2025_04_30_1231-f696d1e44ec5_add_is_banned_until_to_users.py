"""Add is_banned_until to users

Revision ID: f696d1e44ec5
Revises: 2b8b8adc7a48
Create Date: 2025-04-30 12:31:53.269911

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f696d1e44ec5"
down_revision: Union[str, None] = "2b8b8adc7a48"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("is_admin", sa.Boolean(), nullable=True))
    op.add_column(
        "users", sa.Column("is_banned_until", sa.DateTime(), nullable=True)
    )
    op.alter_column(
        "users", "username", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "users", "email", existing_type=sa.VARCHAR(), nullable=True
    )
    op.drop_constraint("uq_users_email", "users", type_="unique")
    op.drop_constraint("uq_users_username", "users", type_="unique")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_index(
        op.f("ix_users_username"), "users", ["username"], unique=True
    )
    op.drop_column("users", "is_blocked")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "is_blocked",
            sa.BOOLEAN(),
            server_default=sa.text("false"),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_index(op.f("ix_users_username"), table_name="users")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_unique_constraint("uq_users_username", "users", ["username"])
    op.create_unique_constraint("uq_users_email", "users", ["email"])
    op.alter_column(
        "users", "email", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column(
        "users", "username", existing_type=sa.VARCHAR(), nullable=False
    )
    op.drop_column("users", "is_banned_until")
    op.drop_column("users", "is_admin")
    # ### end Alembic commands ###
